// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: links.proto

#ifndef PROTOBUF_links_2eproto__INCLUDED
#define PROTOBUF_links_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace speech {
namespace sparrowhawk {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_links_2eproto();
void protobuf_AssignDesc_links_2eproto();
void protobuf_ShutdownFile_links_2eproto();

class Links;

// ===================================================================

class Links : public ::google::protobuf::Message {
 public:
  Links();
  virtual ~Links();

  Links(const Links& from);

  inline Links& operator=(const Links& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Links& default_instance();

  void Swap(Links* other);

  // implements Message ----------------------------------------------

  Links* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Links& from);
  void MergeFrom(const Links& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 own_index = 1;
  inline bool has_own_index() const;
  inline void clear_own_index();
  static const int kOwnIndexFieldNumber = 1;
  inline ::google::protobuf::int32 own_index() const;
  inline void set_own_index(::google::protobuf::int32 value);

  // optional int32 parent = 2;
  inline bool has_parent() const;
  inline void clear_parent();
  static const int kParentFieldNumber = 2;
  inline ::google::protobuf::int32 parent() const;
  inline void set_parent(::google::protobuf::int32 value);

  // optional int32 first_child = 3;
  inline bool has_first_child() const;
  inline void clear_first_child();
  static const int kFirstChildFieldNumber = 3;
  inline ::google::protobuf::int32 first_child() const;
  inline void set_first_child(::google::protobuf::int32 value);

  // optional int32 last_child = 4;
  inline bool has_last_child() const;
  inline void clear_last_child();
  static const int kLastChildFieldNumber = 4;
  inline ::google::protobuf::int32 last_child() const;
  inline void set_last_child(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:speech.sparrowhawk.Links)
 private:
  inline void set_has_own_index();
  inline void clear_has_own_index();
  inline void set_has_parent();
  inline void clear_has_parent();
  inline void set_has_first_child();
  inline void clear_has_first_child();
  inline void set_has_last_child();
  inline void clear_has_last_child();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 own_index_;
  ::google::protobuf::int32 parent_;
  ::google::protobuf::int32 first_child_;
  ::google::protobuf::int32 last_child_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_links_2eproto();
  friend void protobuf_AssignDesc_links_2eproto();
  friend void protobuf_ShutdownFile_links_2eproto();

  void InitAsDefaultInstance();
  static Links* default_instance_;
};
// ===================================================================


// ===================================================================

// Links

// optional int32 own_index = 1;
inline bool Links::has_own_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Links::set_has_own_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Links::clear_has_own_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Links::clear_own_index() {
  own_index_ = 0;
  clear_has_own_index();
}
inline ::google::protobuf::int32 Links::own_index() const {
  return own_index_;
}
inline void Links::set_own_index(::google::protobuf::int32 value) {
  set_has_own_index();
  own_index_ = value;
}

// optional int32 parent = 2;
inline bool Links::has_parent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Links::set_has_parent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Links::clear_has_parent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Links::clear_parent() {
  parent_ = 0;
  clear_has_parent();
}
inline ::google::protobuf::int32 Links::parent() const {
  return parent_;
}
inline void Links::set_parent(::google::protobuf::int32 value) {
  set_has_parent();
  parent_ = value;
}

// optional int32 first_child = 3;
inline bool Links::has_first_child() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Links::set_has_first_child() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Links::clear_has_first_child() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Links::clear_first_child() {
  first_child_ = 0;
  clear_has_first_child();
}
inline ::google::protobuf::int32 Links::first_child() const {
  return first_child_;
}
inline void Links::set_first_child(::google::protobuf::int32 value) {
  set_has_first_child();
  first_child_ = value;
}

// optional int32 last_child = 4;
inline bool Links::has_last_child() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Links::set_has_last_child() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Links::clear_has_last_child() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Links::clear_last_child() {
  last_child_ = 0;
  clear_has_last_child();
}
inline ::google::protobuf::int32 Links::last_child() const {
  return last_child_;
}
inline void Links::set_last_child(::google::protobuf::int32 value) {
  set_has_last_child();
  last_child_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sparrowhawk
}  // namespace speech

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_links_2eproto__INCLUDED
